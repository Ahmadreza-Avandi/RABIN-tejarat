services:
  mysql:
    image: mysql:8.0
    container_name: crm-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: crm_system
      MYSQL_USER: crm_user
      MYSQL_PASSWORD: crm_pass
    volumes:
      - mysql_data:/var/lib/mysql
      - ./crm_system.sql:/docker-entrypoint-initdb.d/01-crm_system.sql
      - ./database-backup-tables.sql:/docker-entrypoint-initdb.d/02-backup-tables.sql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p1234"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped
    networks:
      - crm-network
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=256M --max-connections=200 --innodb-use-native-aio=0 --sql-mode="STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: crm-phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: 1234
      MYSQL_ROOT_PASSWORD: 1234
      PMA_ARBITRARY: 1
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - crm-network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: crm-nextjs
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_USER=root
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=crm_system
      - DATABASE_URL=mysql://root:1234@mysql:3306/crm_system
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - EMAIL_USER=${EMAIL_USER:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - crm-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  crm-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local