version: '3.8'

services:
  mysql:
    image: mariadb:10.5
    env_file:
      - .env.production
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./crm_system.sql:/docker-entrypoint-initdb.d/crm_system.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DATABASE_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - app-network

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile.optimized
    env_file:
      - .env.production
    environment:
      - NODE_ENV=production
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    volumes:
      - ./public/uploads:/app/public/uploads
    depends_on:
      mysql:
        condition: service_healthy
    restart: always
    networks:
      - app-network
    container_name: nextjs

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME:-localhost}
    volumes:
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf.template
      - ./nginx/nginx.sh:/docker-entrypoint.d/40-nginx-config.sh
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nextjs
    networks:
      - app-network
    command: /bin/bash -c "envsubst '$$DOMAIN_NAME' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    env_file:
      - .env.production
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
    depends_on:
      - mysql
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: {}